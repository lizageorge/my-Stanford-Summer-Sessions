# A list of sample relations that you can explore in the interactive demo.
# All relations here are over integers, just for simplicity.
#
# Feel free to add relations of your own here if you'd like, or to edit the
# relations listed here.
#
# To define a relation, you'll need to specify the underlying set, as well as
# where the relation holds. To specify the underlying domain, use the Element()
# predicate to define each element. For example, to make a relation over {1, 3, 7},
# you'd write
#
#   Element(1)
#   Element(3)
#   Element(7)
#
# To specify where the relation holds, use the syntax xRy. For example, to make
# it such that 1R3, you'd just write
#
#   1R3
#
# and the relation will then hold between those elements.


[Congruent Mod 3]
# The "congruent mod 3" relation over over {0, 1, 2, 3, 4, 5, 6, 7, 8}

Element(0)
Element(1)
Element(2)
Element(3)
Element(4)
Element(5)
Element(6)
Element(7)
Element(8)

0R0
0R3
0R6
3R0
3R3
3R6
6R0
6R3
6R6

1R1
1R4
1R7
4R1
4R4
4R7
7R1
7R4
7R7

2R2
2R5
2R8
5R2
5R5
5R8
8R2
8R5
8R8

[Custom 1]
# A custom relation. Nothing fancy here.

Element(0)
Element(1)
Element(2)
Element(3)
Element(4)
Element(5)

0R0

1R1
1R2
2R1
2R2

3R3
3R4
3R5
4R3
4R4
4R5
5R3
5R4
5R5

[Custom 2]
# A custom relation. Nothing fancy here.

Element(0)
Element(1)
Element(2)
Element(3)
Element(4)
Element(5)
Element(6)

0R2
0R3
0R4

1R3
1R4
1R5

2R4
2R5
2R6

3R5
3R6
3R0

4R6
4R0
4R1

5R0
5R1
5R2

6R1
6R2
6R3

[Equality]
# Simple equality relation

Element(1)
Element(2)
Element(3)
Element(4)
1R1
2R2
3R3
4R4

[Less Than]
# Less-than relation over 0, 1, 2, 3, 4, 5

Element(0)
Element(1)
Element(2)
Element(3)
Element(4)
Element(5)

0R1
0R2
0R3
0R4
0R5

1R2
1R3
1R4
1R5

2R3
2R4
2R5

3R4
3R5

4R5

[Opposite Parity]
# Relation over {0, 1, 2, 3, 4, 5} where xRy means that x + y is odd.

Element(0)
Element(1)
Element(2)
Element(3)
Element(4)
Element(5)

0R1
0R3
0R5
2R1
2R3
2R5
4R1
4R3
4R5

1R0
1R2
1R4
3R0
3R2
3R4
5R0
5R2
5R4

[Parallel]
# A strict order consisting of several parallel structures that don't overlap one another.
#
# Its Hasse diagram looks like this:
#
#
#   3
#   |
#   2    7
#   |   / \
#   1  5   6
#   |   \ /
#   0    4    8

Element(0)
Element(1)
Element(2)
Element(3)

0R1
0R2
0R3

1R2
1R3

2R3


Element(4)
Element(5)
Element(6)
Element(7)

4R5
4R6
4R7

5R7

6R7

Element(8)

[Ring]
# A bunch of elements linked in a ring.

Element(0)
Element(1)
Element(2)
Element(3)
Element(4)

0R1
1R2
2R3
3R4
4R0

[Strictly Divides]
# Strict divisbility over {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};
# this is the relation "x divides y, and x != y. "

Element(0)
Element(1)
Element(2)
Element(3)
Element(4)
Element(5)
Element(6)
Element(7)
Element(8)
Element(9)
Element(10)
Element(11)
Element(12)

# Everything divides 0.
1R0
2R0
3R0
4R0
5R0
6R0
7R0
8R0
9R0
10R0
11R0
12R0

# 1 divides everything.
1R0
1R2
1R3
1R4
1R5
1R6
1R7
1R8
1R9
1R10
1R11
1R12

# And the remaining ones.
2R4
2R6
2R8
2R10
2R12

3R6
3R9
3R12

4R8
4R12

5R10

6R12

[Strict Subset]
# The strict subset relation. The master set here is {1, 2, 3}.
# Each base-10 number represents which elements are selected.

Element(0)
Element(1)
Element(2)
Element(3)
Element(12)
Element(13)
Element(23)
Element(123)

# The empty set is a strict subset of everything.
0R1
0R2
0R3
0R12
0R13
0R23
0R123

# Singleton sets
1R12
1R13
1R123

2R12
2R23
2R123

3R13
3R23
3R123

# Doubleton sets

12R123
13R123
23R123

